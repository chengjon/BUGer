name: Release & Deploy

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create Release Artifacts

    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build release artifacts
      run: |
        npm run build
        npm pack

    - name: Upload release artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: '*.tgz'

    - name: Log in to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push release image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        labels: |
          version=${{ github.event.release.tag_name }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: release
    name: Deploy Release to Production
    environment:
      name: production

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.release.tag_name }}

    - name: Deploy to production
      run: |
        echo "Deploying release ${{ github.event.release.tag_name }} to production"
        # kubectl set image deployment/buger-app buger-app=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} -n buger-system

    - name: Post deployment notification
      if: always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Release ${{ github.event.release.tag_name }} has been deployed to production'
          })
